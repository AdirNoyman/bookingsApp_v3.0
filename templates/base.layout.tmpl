{{define "base"}}
    <!DOCTYPE html>
    <html lang="en">
    <head>
        <meta charset="UTF-8" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-GLhlTQ8iRABdZLl6O3oVMWSktQOp6b7In1Zl3/Jr59b6EGGoI1aFkw7cmDA6j6gD" crossorigin="anonymous">
        <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/vanillajs-datepicker@1.2.0/dist/css/datepicker-bs5.min.css">
        <link
                rel="stylesheet"
                type="text/css"
                href="https://unpkg.com/notie/dist/notie.min.css"
        />
        <link rel="stylesheet" type="text/css" href="/static/css/styles.css" />
        <title>Document</title>
    </head>
    <body>
    <header>
        <nav class="navbar navbar-expand-lg navbar navbar-dark bg-dark">
            <div class="container-fluid">
                <a class="navbar-brand" href="/">Navbar</a>
                <button
                        class="navbar-toggler"
                        type="button"
                        data-bs-toggle="collapse"
                        data-bs-target="#navbarSupportedContent"
                        aria-controls="navbarSupportedContent"
                        aria-expanded="false"
                        aria-label="Toggle navigation"
                >
                    <span class="navbar-toggler-icon"></span>
                </button>
                <div
                        class="collapse navbar-collapse"
                        id="navbarSupportedContent"
                >
                    <ul class="navbar-nav me-auto mb-2 mb-lg-0">
                        <li class="nav-item">
                            <a
                                    class="nav-link active"
                                    aria-current="page"
                                    href="/"
                            >Home</a
                            >
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" href="/about">About</a>
                        </li>
                        <li class="nav-item dropdown">
                            <a
                                    class="nav-link dropdown-toggle"
                                    href="/"
                                    id="navbarDropdown"
                                    role="button"
                                    data-bs-toggle="dropdown"
                                    aria-expanded="false"
                            >
                                Rooms
                            </a>
                            <ul
                                    class="dropdown-menu"
                                    aria-labelledby="navbarDropdown"
                            >
                                <li>
                                    <a
                                            class="dropdown-item"
                                            href="/royal-sweet"
                                    >Royal Sweet</a
                                    >
                                </li>
                                <li>
                                    <a
                                            class="dropdown-item"
                                            href="/president"
                                    >Presidental Room</a
                                    >
                                </li>
                            </ul>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" href="/search-availability"
                            >Book Now</a
                            >
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" href="/contact"
                            >Contact</a
                            >
                        </li>
                    </ul>
                </div>
            </div>
        </nav>
    </header>
{{/*The dot indicates to Go to except whatever type of data I'm sending to this block*/}}
{{/*        A space for adding potential HTML file   */}}
        {{block "content" .}}

        {{end}}


    <div id="footer" class="row my-footer">
        <div class="col">Left</div>
        <div class="col">Middle</div>
        <div class="col">Right</div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js" integrity="sha384-w76AqPfDkMBDXo30jS1Sgez6pr3x5MlQ1ZAGC+nuZB+EYdgRZgiwxhTBTkF7CXvN" crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/vanillajs-datepicker@1.2.0/dist/js/datepicker-full.min.js"></script>
    <script src="//cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script>
        function Prompt() {
            let toast = args => {
                const {
                    msg = '',
                    icon = 'success',
                    position = 'top-end',
                } = args;

                const Toast = Swal.mixin({
                    toast: true,
                    title: msg,
                    position: position,
                    icon: icon,
                    showConfirmButton: false,
                    timer: 3000,
                    timerProgressBar: true,
                    didOpen: toast => {
                        toast.addEventListener(
                            'mouseenter',
                            Swal.stopTimer
                        );
                        toast.addEventListener(
                            'mouseleave',
                            Swal.resumeTimer
                        );
                    },
                });

                Toast.fire({});
            };

            let success = args => {
                const { msg = '', title = '', footer = '' } = args;

                Swal.fire({
                    icon: 'success',
                    title: title,
                    text: msg,
                    footer: footer,
                });
            };

            let error = args => {
                const { msg = '', title = '', footer = '' } = args;

                Swal.fire({
                    icon: 'error',
                    title: title,
                    text: msg,
                    footer: footer,
                });
            };

            let custom = async args => {
                const { msg = '', title = '' } = args;

                const { value: result } = await Swal.fire({
                    title: title,
                    html: msg,
                    backdrop: false,
                    focusConfirm: false,
                    showCancelButton: true,
                    // A function that will run before the sweetAlert pop-up is displayed
                    willOpen: () => {
                        if (args.willOpen !== undefined) {

                            args.willOpen()
                        }
                    },
                    didOpen: () => {
                        if (args.didOpen !== undefined) {

                            args.didOpen()
                        }
                    },
                    preConfirm: () => {
                        return [
                            document.getElementById('start').value,
                            document.getElementById('end').value,
                        ];
                    },
                });

                if (result) {

                    // If the user didn't hit the cancel button...
                    // Run JS code after the pop-up window closes
                    if (result.dismiss !== Swal.DismissReason.cancel) {
                        // then check if the user entered dates
                        if (result[0] !== "" && result[1] !== "") {
                            // check if there is a callback handler
                            if (args.callback !== undefined) {

                                // call the call back handler that was defined by us
                                args.callback(result);
                                console.log("result:",result)

                            } else {
                                // Do nothing
                                return false
                            }

                        } else {
                            // Do nothing
                           return false
                        }

                    }
                }

            };

            return { toast, success, error, custom };
        }

    </script>


    <script src="https://unpkg.com/notie"></script>
    <script>
        const notify = (msg, msgType) => {
            notie.alert({
                type: msgType, // optional, default = 4, enum: [1, 2, 3, 4, 5, 'success', 'warning', 'error', 'info', 'neutral']
                text: msg,
                stay: false, // optional, default = false
                time: 3, // optional, default = 3, minimum = 1,
                position: 'top', // optional, default = 'top', enum: ['top', 'bottom']
            });
        };
    </script>
    <script>
        const notifyModal = (title, msg, msgType, btnText) => {
            swal({
                title: title,
                text: msg,
                icon: msgType,
                button: btnText,
            });
        };
    </script>
    {{/*        A space for adding potential JS file    */}}
    {{block "js" .}}

    {{end}}
    </body>
    </html>
{{end}}